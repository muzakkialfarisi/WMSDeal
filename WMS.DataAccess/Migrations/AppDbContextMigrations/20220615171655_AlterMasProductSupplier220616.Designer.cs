// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WMS.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220615171655_AlterMasProductSupplier220616")]
    partial class AlterMasProductSupplier220616
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("App.WMSDeal.Models.IncDeliveryOrder", b =>
                {
                    b.Property<string>("DONumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DOSupplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateArrived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDelivered")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryCourierId")
                        .HasColumnType("int");

                    b.Property<string>("HouseCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PONumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("ShippingCost")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DONumber");

                    b.HasIndex("DeliveryCourierId");

                    b.HasIndex("HouseCode");

                    b.HasIndex("PONumber");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TenantId");

                    b.ToTable("IncDeliveryOrder", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncDeliveryOrderArrival", b =>
                {
                    b.Property<int>("DOProductId")
                        .HasColumnType("int");

                    b.Property<string>("ArrivedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateArrived")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotaImage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductImage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("DOProductId");

                    b.ToTable("IncDeliveryOrderArrival", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncDeliveryOrderProduct", b =>
                {
                    b.Property<int>("DOProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DOProductId"), 1L, 1);

                    b.Property<string>("ClosedNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DONumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("DOProductCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfExpired")
                        .HasColumnType("datetime2");

                    b.Property<int?>("POProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<float>("SubTotal")
                        .HasColumnType("real");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("DOProductId");

                    b.HasIndex("DONumber");

                    b.HasIndex("POProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("IncDeliveryOrderProduct", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncItemProduct", b =>
                {
                    b.Property<string>("IKU")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ArrivedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DOProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateArrived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatePutedAway")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PutedAwatBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StorageCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IKU");

                    b.HasIndex("DOProductId");

                    b.HasIndex("StorageCode");

                    b.ToTable("IncItemProduct", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncPurchaseOrder", b =>
                {
                    b.Property<string>("PONumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Discount")
                        .HasColumnType("real");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<float?>("OrderTax")
                        .HasColumnType("real");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantDivisionId")
                        .HasColumnType("int");

                    b.Property<int>("TenantHouseId")
                        .HasColumnType("int");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PONumber");

                    b.HasIndex("RequestId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TenantDivisionId");

                    b.HasIndex("TenantHouseId");

                    b.HasIndex("TenantId");

                    b.ToTable("IncPurchaseOrder", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncPurchaseOrderProduct", b =>
                {
                    b.Property<int>("POProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("POProductId"), 1L, 1);

                    b.Property<string>("ClosedNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DOQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SpecialInstruction")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<float>("SubTotal")
                        .HasColumnType("real");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("POProductId");

                    b.HasIndex("PONumber");

                    b.HasIndex("ProductId");

                    b.ToTable("IncPurchaseOrderProduct", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncQualityCheck", b =>
                {
                    b.Property<int>("DOProductId")
                        .HasColumnType("int");

                    b.Property<string>("CheckedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateChecked")
                        .HasColumnType("datetime2");

                    b.Property<string>("NextStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductImage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("DOProductId");

                    b.ToTable("IncQualityCheck", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncRequestPurchase", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"), 1L, 1);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRequested")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateReviewed")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialInstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantDivisionId")
                        .HasColumnType("int");

                    b.Property<int>("TenantHouseId")
                        .HasColumnType("int");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RequestId");

                    b.HasIndex("TenantDivisionId");

                    b.HasIndex("TenantHouseId");

                    b.HasIndex("TenantId");

                    b.ToTable("IncRequestPurchase", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncRequestPurchaseProduct", b =>
                {
                    b.Property<int>("RequestProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestProductId"), 1L, 1);

                    b.Property<string>("ApprovedMemo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApprovedQuantity")
                        .HasColumnType("int");

                    b.Property<float?>("BidPrice")
                        .HasColumnType("real");

                    b.Property<DateTime>("ExpArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("FinalPrice")
                        .HasColumnType("real");

                    b.Property<string>("Memo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<float?>("NegotiatedPrice")
                        .HasColumnType("real");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Supplier")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("RequestProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RequestId");

                    b.ToTable("IncRequestPurchaseProduct", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvPickingRoute", b =>
                {
                    b.Property<string>("RouteCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("HouseCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Log")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteCode");

                    b.HasIndex("HouseCode");

                    b.ToTable("InvPickingRoute", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvPickingRouteColumn", b =>
                {
                    b.Property<int>("RouteColumn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteColumn"), 1L, 1);

                    b.Property<string>("ColumnCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("RouteCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RouteColumn");

                    b.HasIndex("ColumnCode");

                    b.HasIndex("RouteCode");

                    b.ToTable("InvPickingRouteColumn", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvProductHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<int>("HistoryType")
                        .HasColumnType("int");

                    b.Property<string>("HouseCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Interest")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("TrxNo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("UserBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HouseCode");

                    b.HasIndex("ProductId");

                    b.ToTable("InvProductHistory", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvProductPutaway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DOProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePutaway")
                        .HasColumnType("datetime2");

                    b.Property<string>("PutBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("QtyStock")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("StorageCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DOProductId");

                    b.HasIndex("StorageCode");

                    b.ToTable("InvProductPutaway", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvProductStock", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("HouseCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("QtyOrder")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseCode");

                    b.HasIndex("ProductId");

                    b.ToTable("InvProductStock", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvRelabeling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DOProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRelabelled")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RelabelledBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("InvRelabeling", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvRepacking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DOProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRepacked")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RepackedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("InvRepacking", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvSalesOrderPick", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrdProductId")
                        .HasColumnType("int");

                    b.Property<int>("QtyPick")
                        .HasColumnType("int");

                    b.Property<Guid>("StorageCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrdProductId");

                    b.HasIndex("StorageCode");

                    b.ToTable("InvSalesOrderPick", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageBesaran", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MaxLebar")
                        .HasColumnType("int");

                    b.Property<int>("MaxPanjang")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Code");

                    b.ToTable("InvStorageBesaran", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageBin", b =>
                {
                    b.Property<string>("BinCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BinName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("LevelCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PlanPhotoLocation")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("BinCode");

                    b.HasIndex("LevelCode");

                    b.ToTable("InvStorageBin", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageCategory", b =>
                {
                    b.Property<int>("StorageCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StorageCategoryId"), 1L, 1);

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("StorageCategoryCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("StorageCategoryName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("StorageCategoryId");

                    b.ToTable("InvStorageCategory", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageCode", b =>
                {
                    b.Property<Guid>("StorageCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BinCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PlanPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("QtyOrder")
                        .HasColumnType("int");

                    b.Property<string>("SizeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("StorageCategoryId")
                        .HasColumnType("int");

                    b.HasKey("StorageCode");

                    b.HasIndex("BinCode");

                    b.HasIndex("SizeCode");

                    b.HasIndex("StorageCategoryId");

                    b.ToTable("InvStorageCode", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageColumn", b =>
                {
                    b.Property<string>("ColumnCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RowCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ColumnCode");

                    b.HasIndex("RowCode");

                    b.ToTable("InvStorageColumn", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageLevel", b =>
                {
                    b.Property<string>("LevelCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ColumnCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LevelPlanPhoto")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SectionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("LevelCode");

                    b.HasIndex("ColumnCode");

                    b.HasIndex("SectionCode");

                    b.ToTable("InvStorageLevel", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageRow", b =>
                {
                    b.Property<string>("RowCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("HouseCode")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RowName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RowPlanPhoto")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ZoneCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RowCode");

                    b.HasIndex("HouseCode");

                    b.HasIndex("ZoneCode");

                    b.ToTable("InvStorageRow", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageSection", b =>
                {
                    b.Property<string>("SectionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RowCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SectionCode");

                    b.HasIndex("RowCode");

                    b.ToTable("InvStorageSection", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageSize", b =>
                {
                    b.Property<string>("SizeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BesaranCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TebalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SizeCode");

                    b.HasIndex("BesaranCode");

                    b.HasIndex("TebalCode");

                    b.ToTable("InvStorageSize", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageTebal", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MaxTinggi")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Code");

                    b.ToTable("InvStorageTebal", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageZone", b =>
                {
                    b.Property<string>("ZoneCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ZonePlanPhoto")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ZoneCode");

                    b.ToTable("InvStorageZone", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BrandDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BrandImage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MasBrand", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasCheckPoint", b =>
                {
                    b.Property<int>("CheckPointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckPointId"), 1L, 1);

                    b.Property<string>("CheckPointCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CheckPointDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CheckPointName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.HasKey("CheckPointId");

                    b.ToTable("MasCheckpoint", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasCustomerData", b =>
                {
                    b.Property<Guid>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CustTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("HandPhone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("IndustryId")
                        .HasColumnType("int");

                    b.Property<string>("KelId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KodePos")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("OfficePhone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("RekeningNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SaldoAkhir")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TermOfPayment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustId");

                    b.HasIndex("CustTypeId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("KelId");

                    b.ToTable("MasCustomerData", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasCustomerType", b =>
                {
                    b.Property<int>("CustTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustTypeId"), 1L, 1);

                    b.Property<string>("CustTypeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustTypeName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.HasKey("CustTypeId");

                    b.ToTable("MasCustomerType", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDataTenant", b =>
                {
                    b.Property<Guid>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("KelId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KodePos")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("OfficePhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfileImageUrl")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("ShowPrice")
                        .HasColumnType("bit");

                    b.Property<string>("TenantCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantId");

                    b.HasIndex("KelId");

                    b.ToTable("MasDataTenant", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDataTenantDivision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("MasDataTenantDivision", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDataTenantWarehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("HouseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HouseCode");

                    b.HasIndex("TenantId");

                    b.ToTable("MasDataTenantWarehouse", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDeliveryOrderCourier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MasDeliveryOrderCourier", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDirectorate", b =>
                {
                    b.Property<string>("DirCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DirName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("DirCode");

                    b.ToTable("MasDirectorate", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDivision", b =>
                {
                    b.Property<int>("DivId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DivId"), 1L, 1);

                    b.Property<string>("DirCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DivCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DivName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.HasKey("DivId");

                    b.HasIndex("DirCode");

                    b.ToTable("MasDivision", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasHouseCode", b =>
                {
                    b.Property<string>("HouseCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("AccessArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BuildSize")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BuildStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Fax")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("HouseManager")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HouseName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("KelId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KodePos")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Latitude")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OfficePhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HouseCode");

                    b.HasIndex("KelId");

                    b.ToTable("MasHouseCode", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasIndustry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("IndustryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ID");

                    b.ToTable("MasIndustry", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasJabatan", b =>
                {
                    b.Property<int>("JobPosId")
                        .HasColumnType("int");

                    b.Property<int>("DivId")
                        .HasColumnType("int");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("JobPosCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("JobPosName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("JobPosId");

                    b.HasIndex("DivId");

                    b.ToTable("MasJabatan", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasKabupaten", b =>
                {
                    b.Property<string>("KabId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KabName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ProId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("KabId");

                    b.HasIndex("ProId");

                    b.ToTable("MasKabupaten", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasKecamatan", b =>
                {
                    b.Property<string>("KecId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KabId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KecName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("KecId");

                    b.HasIndex("KabId");

                    b.ToTable("MasKecamatan", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasKelurahan", b =>
                {
                    b.Property<string>("KelId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KecId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KelName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("KelId");

                    b.HasIndex("KecId");

                    b.ToTable("MasKelurahan", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasPackingType", b =>
                {
                    b.Property<string>("PackTypeId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PackTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PackTypeId");

                    b.ToTable("MasPackingType", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasPlatform", b =>
                {
                    b.Property<int>("PlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlatformId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("PlatformId");

                    b.ToTable("MasPlatform", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasPricing", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceId"), 1L, 1);

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<decimal>("InsuranceFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ManagementFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OutgoingFeeMin")
                        .HasColumnType("int");

                    b.Property<decimal>("OutgoingFeeRates")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OutgoingFeeRatesType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ReceivingFeeMin")
                        .HasColumnType("int");

                    b.Property<decimal>("ReceivingFeeRates")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReceivingFeeRatesType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StorageMin")
                        .HasColumnType("int");

                    b.Property<decimal>("StorageRates")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StorageRatesType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SystemCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PriceId");

                    b.HasIndex("TenantId");

                    b.ToTable("MasPricing", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasPricingAdditional", b =>
                {
                    b.Property<int>("AddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddId"), 1L, 1);

                    b.Property<decimal>("AddFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AddFeeType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AddMin")
                        .HasColumnType("int");

                    b.Property<string>("AddName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<int>("PriceId")
                        .HasColumnType("int");

                    b.HasKey("AddId");

                    b.HasIndex("PriceId");

                    b.ToTable("MasPricingAdditional", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasProductData", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("ActualWeight")
                        .HasColumnType("int");

                    b.Property<string>("BeautyPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CargoPriorityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CloseUpPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ipb")
                        .HasColumnType("int");

                    b.Property<int>("Lebar")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PackagingId")
                        .HasColumnType("int");

                    b.Property<int>("Panjang")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PurchasePrice")
                        .HasColumnType("real");

                    b.Property<bool>("RePackaging")
                        .HasColumnType("bit");

                    b.Property<bool>("Resellable")
                        .HasColumnType("bit");

                    b.Property<float?>("ResellablePrice")
                        .HasColumnType("real");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SafetyStock")
                        .HasColumnType("int");

                    b.Property<float>("SellingPrice")
                        .HasColumnType("real");

                    b.Property<string>("SizeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StorageMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Storageperiod")
                        .HasColumnType("int");

                    b.Property<string>("Supplier")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Tinggi")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfRepackCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VolWight")
                        .HasColumnType("int");

                    b.Property<string>("ZoneCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PackagingId");

                    b.HasIndex("SizeCode");

                    b.HasIndex("TenantId");

                    b.HasIndex("ZoneCode");

                    b.ToTable("MasProductData", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasProductPackaging", b =>
                {
                    b.Property<int>("PackagingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackagingId"), 1L, 1);

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("PackagingCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PackagingName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("PackagingId");

                    b.ToTable("MasProductPackaging", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasProductPriority", b =>
                {
                    b.Property<string>("CargoPriorityCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CargoPriorityDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CargoPriorityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.HasKey("CargoPriorityCode");

                    b.ToTable("MasProductPriority", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasProductTypeOfRepack", b =>
                {
                    b.Property<string>("RepackCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("RepackDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RepackCode");

                    b.ToTable("MasProductTypeOfRepack", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasProvinsi", b =>
                {
                    b.Property<string>("ProId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("ProId");

                    b.HasIndex("RegionId");

                    b.ToTable("MasProvinsi", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasRegional", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionId"), 1L, 1);

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RegionId");

                    b.ToTable("MasRegional", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasSalesCourier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MasSalesCourier", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasSalesType", b =>
                {
                    b.Property<int>("StyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StyId"), 1L, 1);

                    b.Property<string>("StyCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("StyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("StyId");

                    b.ToTable("MasSalesType", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasService", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"), 1L, 1);

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("ServiceCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ServiceId");

                    b.ToTable("MasService", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasServiceCategory", b =>
                {
                    b.Property<int>("ServiceCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceCategoryId"), 1L, 1);

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("ServiceCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("ServiceCategoryId");

                    b.HasIndex("ServiceId");

                    b.ToTable("MasServiceCategory", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasStore", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("KelId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KodePos")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StoreId");

                    b.HasIndex("KelId");

                    b.HasIndex("PlatformId");

                    b.HasIndex("TenantId");

                    b.ToTable("MasStore", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasSupplierData", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("HandPhone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IndustryId")
                        .HasColumnType("int");

                    b.Property<string>("KelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KodePos")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("OfficePhone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RekeningNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SupplierServiceId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierTypeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TermOfPayment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SupplierId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("KelId");

                    b.HasIndex("SupplierServiceId");

                    b.HasIndex("SupplierTypeId");

                    b.HasIndex("TenantId");

                    b.ToTable("MasSupplierData", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasSupplierService", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"), 1L, 1);

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("SupplierServiceCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SupplierServiceName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ServiceId");

                    b.ToTable("MasSupplierService", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasSupplierType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"), 1L, 1);

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("SupplierTypeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SupplierTypeName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("TypeId");

                    b.ToTable("MasSupplierType", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BaseUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OperatorValue")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UnitOperantor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MasUnit", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesDispatchtoCourier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CourierName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("DatedHandOvered")
                        .HasColumnType("datetime2");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("HandoveredBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OrdCourier")
                        .HasColumnType("int");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhotoHandOver")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("OrdCourier");

                    b.HasIndex("OrderId");

                    b.ToTable("OutSalesDispatchtoCourier", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrder", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateOrdered")
                        .HasColumnType("datetime2");

                    b.Property<int>("FlagApi")
                        .HasColumnType("int");

                    b.Property<int>("FlagPick")
                        .HasColumnType("int");

                    b.Property<string>("HouseCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("OrdSalesType")
                        .HasColumnType("int");

                    b.Property<string>("OrderBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.HasIndex("HouseCode");

                    b.HasIndex("OrdSalesType");

                    b.HasIndex("PlatformId");

                    b.HasIndex("StoreId");

                    b.HasIndex("TenantId");

                    b.ToTable("OutSalesOrder", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrderAssign", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateAssigned")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStaged")
                        .HasColumnType("datetime2");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("ImageStaged")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("OutSalesOrderAssign", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrderConsignee", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CneeAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CneeCity")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CneeLatitude")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CneeLongitude")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CneeName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CneePhone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("KelId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OrdZipCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("OrderId");

                    b.HasIndex("KelId");

                    b.ToTable("OutSalesOrderConsignee", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrderCustomer", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CustCity")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CustPhone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CustZipCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KelId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("OrderId");

                    b.HasIndex("KelId");

                    b.ToTable("OutSalesOrderCustomer", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutsalesOrderDelivery", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AirwayBill")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("GrandWeight")
                        .HasColumnType("real");

                    b.Property<int>("OrdCourier")
                        .HasColumnType("int");

                    b.Property<string>("OrdCourierService")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("OrdTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShippingCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("OrdCourier");

                    b.ToTable("OutsalesOrderDelivery", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrderPack", b =>
                {
                    b.Property<int>("OrdProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePacked")
                        .HasColumnType("datetime2");

                    b.Property<string>("PackTypeId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PackedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OrdProductId");

                    b.HasIndex("PackTypeId");

                    b.ToTable("OutSalesOrderPack", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrderProduct", b =>
                {
                    b.Property<int>("OrdProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdProductId"), 1L, 1);

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float>("SubTotal")
                        .HasColumnType("real");

                    b.Property<float>("TotalWeight")
                        .HasColumnType("real");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("OrdProductId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OutSalesOrderProduct", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrderStorage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DatePicked")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateQualityChecked")
                        .HasColumnType("datetime2");

                    b.Property<string>("IKU")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IdPutAway")
                        .HasColumnType("int");

                    b.Property<int>("OrdProductId")
                        .HasColumnType("int");

                    b.Property<string>("PickedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PickedStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("QtyPick")
                        .HasColumnType("int");

                    b.Property<string>("QualityCheckedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QualityCheckedRemark")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("QualityCheckedStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<Guid>("StorageCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IKU");

                    b.HasIndex("IdPutAway");

                    b.HasIndex("OrdProductId");

                    b.HasIndex("StorageCode");

                    b.ToTable("OutSalesOrderStorage", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.SecAuditTrail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventDesctiption")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EventFunction")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventMenu")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SecAuditTrail", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.SecMenu", b =>
                {
                    b.Property<string>("MenuId")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IconClass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MenuFlag")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("MenuGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MenuKey")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("MenuSort")
                        .HasColumnType("int");

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("MenuId");

                    b.ToTable("SecMenu", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.SecProfile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProfileId");

                    b.ToTable("SecProfile", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.SecProfileMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Flag")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IsEdit")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IsInsert")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IsPrint")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IsView")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("MenuId")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("ProfileId");

                    b.ToTable("SecProfileMenu", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.SecUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailConfirmed")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpireFlag")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("HouseCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("JobPosId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumberConfirmed")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("ProfileImageUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("UserId");

                    b.HasIndex("HouseCode");

                    b.HasIndex("JobPosId");

                    b.HasIndex("ProfileId");

                    b.ToTable("SecUser", (string)null);
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncDeliveryOrder", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasDeliveryOrderCourier", "MasDeliveryOrderCourier")
                        .WithMany("IncDeliveryOrders")
                        .HasForeignKey("DeliveryCourierId");

                    b.HasOne("App.WMSDeal.Models.MasHouseCode", "MasHouseCode")
                        .WithMany()
                        .HasForeignKey("HouseCode");

                    b.HasOne("App.WMSDeal.Models.IncPurchaseOrder", "IncPurchaseOrder")
                        .WithMany()
                        .HasForeignKey("PONumber");

                    b.HasOne("App.WMSDeal.Models.MasSupplierData", "MasSupplierData")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("App.WMSDeal.Models.MasDataTenant", "MasDataTenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("IncPurchaseOrder");

                    b.Navigation("MasDataTenant");

                    b.Navigation("MasDeliveryOrderCourier");

                    b.Navigation("MasHouseCode");

                    b.Navigation("MasSupplierData");
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncDeliveryOrderArrival", b =>
                {
                    b.HasOne("App.WMSDeal.Models.IncDeliveryOrderProduct", "IncDeliveryOrderProduct")
                        .WithMany()
                        .HasForeignKey("DOProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncDeliveryOrderProduct");
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncDeliveryOrderProduct", b =>
                {
                    b.HasOne("App.WMSDeal.Models.IncDeliveryOrder", "IncDeliveryOrder")
                        .WithMany("IncDeliveryOrderProducts")
                        .HasForeignKey("DONumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.IncPurchaseOrderProduct", "IncPurchaseOrderProduct")
                        .WithMany()
                        .HasForeignKey("POProductId");

                    b.HasOne("App.WMSDeal.Models.MasProductData", "MasProductData")
                        .WithMany("IncDeliveryOrderProducts")
                        .HasForeignKey("ProductId");

                    b.Navigation("IncDeliveryOrder");

                    b.Navigation("IncPurchaseOrderProduct");

                    b.Navigation("MasProductData");
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncItemProduct", b =>
                {
                    b.HasOne("App.WMSDeal.Models.IncDeliveryOrderProduct", "IncDeliveryOrderProduct")
                        .WithMany("IncItemProducts")
                        .HasForeignKey("DOProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.InvStorageCode", "InvStorageCode")
                        .WithMany("IncItemProducts")
                        .HasForeignKey("StorageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncDeliveryOrderProduct");

                    b.Navigation("InvStorageCode");
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncPurchaseOrder", b =>
                {
                    b.HasOne("App.WMSDeal.Models.IncRequestPurchase", "IncRequestPurchase")
                        .WithMany()
                        .HasForeignKey("RequestId");

                    b.HasOne("App.WMSDeal.Models.MasSupplierData", "MasSupplierData")
                        .WithMany("IncPurchaseOrders")
                        .HasForeignKey("SupplierId");

                    b.HasOne("App.WMSDeal.Models.MasDataTenantDivision", "masDataTenantDivision")
                        .WithMany("IncPurchaseOrder")
                        .HasForeignKey("TenantDivisionId");

                    b.HasOne("App.WMSDeal.Models.MasDataTenantWarehouse", "MasDataTenantWarehouse")
                        .WithMany("IncPurchaseOrder")
                        .HasForeignKey("TenantHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasDataTenant", "MasDataTenant")
                        .WithMany("IncPurchaseOrders")
                        .HasForeignKey("TenantId");

                    b.Navigation("IncRequestPurchase");

                    b.Navigation("MasDataTenant");

                    b.Navigation("MasDataTenantWarehouse");

                    b.Navigation("MasSupplierData");

                    b.Navigation("masDataTenantDivision");
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncPurchaseOrderProduct", b =>
                {
                    b.HasOne("App.WMSDeal.Models.IncPurchaseOrder", "IncPurchaseOrder")
                        .WithMany("IncPurchaseOrderProducts")
                        .HasForeignKey("PONumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasProductData", "MasProductData")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("IncPurchaseOrder");

                    b.Navigation("MasProductData");
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncQualityCheck", b =>
                {
                    b.HasOne("App.WMSDeal.Models.IncDeliveryOrderArrival", "IncDeliveryOrderArrival")
                        .WithMany()
                        .HasForeignKey("DOProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncDeliveryOrderArrival");
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncRequestPurchase", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasDataTenantDivision", "masDataTenantDivision")
                        .WithMany("IncRequestPurchase")
                        .HasForeignKey("TenantDivisionId");

                    b.HasOne("App.WMSDeal.Models.MasDataTenantWarehouse", "MasDataTenantWarehouse")
                        .WithMany("IncRequestPurchase")
                        .HasForeignKey("TenantHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasDataTenant", "MasDataTenant")
                        .WithMany("IncRequestPurchases")
                        .HasForeignKey("TenantId");

                    b.Navigation("MasDataTenant");

                    b.Navigation("MasDataTenantWarehouse");

                    b.Navigation("masDataTenantDivision");
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncRequestPurchaseProduct", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasProductData", "MasProductData")
                        .WithMany("IncRequestPurchaseProducts")
                        .HasForeignKey("ProductId");

                    b.HasOne("App.WMSDeal.Models.IncRequestPurchase", "IncRequestPurchase")
                        .WithMany("IncRequestPurchaseProducts")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncRequestPurchase");

                    b.Navigation("MasProductData");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvPickingRoute", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasHouseCode", "MasHouseCode")
                        .WithMany()
                        .HasForeignKey("HouseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasHouseCode");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvPickingRouteColumn", b =>
                {
                    b.HasOne("App.WMSDeal.Models.InvStorageColumn", "InvStorageColumn")
                        .WithMany()
                        .HasForeignKey("ColumnCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.InvPickingRoute", "InvPickingRoute")
                        .WithMany("InvPickingRouteColumns")
                        .HasForeignKey("RouteCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvPickingRoute");

                    b.Navigation("InvStorageColumn");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvProductHistory", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasHouseCode", "MasHouseCode")
                        .WithMany()
                        .HasForeignKey("HouseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasProductData", "MasProductData")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasHouseCode");

                    b.Navigation("MasProductData");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvProductPutaway", b =>
                {
                    b.HasOne("App.WMSDeal.Models.IncDeliveryOrderArrival", "IncDeliveryOrderArrival")
                        .WithMany()
                        .HasForeignKey("DOProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.InvStorageCode", "InvStorageCode")
                        .WithMany()
                        .HasForeignKey("StorageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncDeliveryOrderArrival");

                    b.Navigation("InvStorageCode");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvProductStock", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasHouseCode", "MasHouseCode")
                        .WithMany()
                        .HasForeignKey("HouseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasProductData", "MasProductData")
                        .WithMany("InvProductStocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasHouseCode");

                    b.Navigation("MasProductData");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvRelabeling", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasProductData", "MasProductData")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasProductData");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvRepacking", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasProductData", "MasProductData")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasProductData");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvSalesOrderPick", b =>
                {
                    b.HasOne("App.WMSDeal.Models.OutSalesOrderProduct", "OutSalesOrderProduct")
                        .WithMany()
                        .HasForeignKey("OrdProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.InvStorageCode", "InvStorageCode")
                        .WithMany()
                        .HasForeignKey("StorageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvStorageCode");

                    b.Navigation("OutSalesOrderProduct");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageBin", b =>
                {
                    b.HasOne("App.WMSDeal.Models.InvStorageLevel", "InvStorageLevel")
                        .WithMany("InvStorageBins")
                        .HasForeignKey("LevelCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvStorageLevel");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageCode", b =>
                {
                    b.HasOne("App.WMSDeal.Models.InvStorageBin", "InvStorageBin")
                        .WithMany("InvStorageCodes")
                        .HasForeignKey("BinCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.InvStorageSize", "InvStorageSize")
                        .WithMany("InvStorageCodes")
                        .HasForeignKey("SizeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.InvStorageCategory", "InvStorageCategory")
                        .WithMany("invStorageCodes")
                        .HasForeignKey("StorageCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvStorageBin");

                    b.Navigation("InvStorageCategory");

                    b.Navigation("InvStorageSize");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageColumn", b =>
                {
                    b.HasOne("App.WMSDeal.Models.InvStorageRow", "InvStorageRow")
                        .WithMany("InvStorageColumns")
                        .HasForeignKey("RowCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvStorageRow");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageLevel", b =>
                {
                    b.HasOne("App.WMSDeal.Models.InvStorageColumn", "InvStorageColumn")
                        .WithMany("InvStorageLevels")
                        .HasForeignKey("ColumnCode");

                    b.HasOne("App.WMSDeal.Models.InvStorageSection", "InvStorageSection")
                        .WithMany("InvStorageLevels")
                        .HasForeignKey("SectionCode");

                    b.Navigation("InvStorageColumn");

                    b.Navigation("InvStorageSection");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageRow", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasHouseCode", "MasHouseCode")
                        .WithMany("InvStorageRows")
                        .HasForeignKey("HouseCode");

                    b.HasOne("App.WMSDeal.Models.InvStorageZone", "InvStorageZone")
                        .WithMany("InvStorageRows")
                        .HasForeignKey("ZoneCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvStorageZone");

                    b.Navigation("MasHouseCode");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageSection", b =>
                {
                    b.HasOne("App.WMSDeal.Models.InvStorageRow", "InvStorageRow")
                        .WithMany()
                        .HasForeignKey("RowCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvStorageRow");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageSize", b =>
                {
                    b.HasOne("App.WMSDeal.Models.InvStorageBesaran", "InvStorageBesaran")
                        .WithMany("Sizes")
                        .HasForeignKey("BesaranCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.InvStorageTebal", "InvStorageTebal")
                        .WithMany("Sizes")
                        .HasForeignKey("TebalCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvStorageBesaran");

                    b.Navigation("InvStorageTebal");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasCustomerData", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasCustomerType", "MasCustomerType")
                        .WithMany("MasCustomerDatas")
                        .HasForeignKey("CustTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasIndustry", "MasIndustry")
                        .WithMany("MasCustomerDatas")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasKelurahan", "MasKelurahan")
                        .WithMany()
                        .HasForeignKey("KelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasCustomerType");

                    b.Navigation("MasIndustry");

                    b.Navigation("MasKelurahan");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDataTenant", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasKelurahan", "MasKelurahan")
                        .WithMany()
                        .HasForeignKey("KelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasKelurahan");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDataTenantDivision", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasDataTenant", "MasDataTenant")
                        .WithMany("MasDataTenantDivisions")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasDataTenant");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDataTenantWarehouse", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasHouseCode", "MasHouseCode")
                        .WithMany("MasDataTenantWarehouses")
                        .HasForeignKey("HouseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasDataTenant", "MasDataTenant")
                        .WithMany("MasDataTenantWarehouses")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasDataTenant");

                    b.Navigation("MasHouseCode");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDivision", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasDirectorate", "MasDirectorate")
                        .WithMany("MasDivisions")
                        .HasForeignKey("DirCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasDirectorate");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasHouseCode", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasKelurahan", "MasKelurahan")
                        .WithMany("HouseCodes")
                        .HasForeignKey("KelId");

                    b.Navigation("MasKelurahan");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasJabatan", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasDivision", "MasDivision")
                        .WithMany("MasJabatans")
                        .HasForeignKey("DivId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasDivision");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasKabupaten", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasProvinsi", "MasProvinsi")
                        .WithMany("MasKabupatens")
                        .HasForeignKey("ProId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasProvinsi");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasKecamatan", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasKabupaten", "MasKabupaten")
                        .WithMany("MasKecamatans")
                        .HasForeignKey("KabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasKabupaten");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasKelurahan", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasKecamatan", "MasKecamatan")
                        .WithMany("MasKelurahans")
                        .HasForeignKey("KecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasKecamatan");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasPricing", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasDataTenant", "MasDataTenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasDataTenant");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasPricingAdditional", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasPricing", "MasPricing")
                        .WithMany()
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasPricing");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasProductData", b =>
                {
                    b.HasOne("App.WMSDeal.Models.InvStorageCategory", "InvStorageCategory")
                        .WithMany("masProductData")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasProductPackaging", "MasProductPackaging")
                        .WithMany("MasProductDatas")
                        .HasForeignKey("PackagingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.InvStorageSize", "InvStorageSize")
                        .WithMany("MasProductDatas")
                        .HasForeignKey("SizeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasDataTenant", "MasDataTenant")
                        .WithMany("MasProductDatas")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.InvStorageZone", "InvStorageZone")
                        .WithMany("MasProductDatas")
                        .HasForeignKey("ZoneCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvStorageCategory");

                    b.Navigation("InvStorageSize");

                    b.Navigation("InvStorageZone");

                    b.Navigation("MasDataTenant");

                    b.Navigation("MasProductPackaging");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasProvinsi", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasRegional", "MasRegional")
                        .WithMany("MasProvinsis")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasRegional");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasServiceCategory", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasService", "MasService")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasService");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasStore", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasKelurahan", "MasKelurahan")
                        .WithMany()
                        .HasForeignKey("KelId");

                    b.HasOne("App.WMSDeal.Models.MasPlatform", "MasPlatform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasDataTenant", "MasDataTenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasDataTenant");

                    b.Navigation("MasKelurahan");

                    b.Navigation("MasPlatform");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasSupplierData", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasIndustry", "MasIndustry")
                        .WithMany("MasSupplierDatas")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasKelurahan", "MasKelurahan")
                        .WithMany("Suppliers")
                        .HasForeignKey("KelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasSupplierService", "MasSupplierService")
                        .WithMany("MasSupplierData")
                        .HasForeignKey("SupplierServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasSupplierType", "MasSupplierType")
                        .WithMany("MasSupplierData")
                        .HasForeignKey("SupplierTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasDataTenant", "MasDataTenant")
                        .WithMany("MasSupplierDatas")
                        .HasForeignKey("TenantId");

                    b.Navigation("MasDataTenant");

                    b.Navigation("MasIndustry");

                    b.Navigation("MasKelurahan");

                    b.Navigation("MasSupplierService");

                    b.Navigation("MasSupplierType");
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesDispatchtoCourier", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasSalesCourier", "MasSalesCourier")
                        .WithMany()
                        .HasForeignKey("OrdCourier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.OutSalesOrder", "OutSalesOrder")
                        .WithMany("OutSalesDispatchtoCouriers")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasSalesCourier");

                    b.Navigation("OutSalesOrder");
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrder", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasHouseCode", "MasHouseCode")
                        .WithMany("OutSalesOrders")
                        .HasForeignKey("HouseCode");

                    b.HasOne("App.WMSDeal.Models.MasSalesType", "MasSalesType")
                        .WithMany()
                        .HasForeignKey("OrdSalesType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasPlatform", "MasPlatform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasStore", "MasStore")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("App.WMSDeal.Models.MasDataTenant", "MasDataTenant")
                        .WithMany("OutSalesOrders")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasDataTenant");

                    b.Navigation("MasHouseCode");

                    b.Navigation("MasPlatform");

                    b.Navigation("MasSalesType");

                    b.Navigation("MasStore");
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrderAssign", b =>
                {
                    b.HasOne("App.WMSDeal.Models.OutSalesOrder", "OutSalesOrder")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.SecUser", "SecUser")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("OutSalesOrder");

                    b.Navigation("SecUser");
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrderConsignee", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasKelurahan", "MasKelurahan")
                        .WithMany()
                        .HasForeignKey("KelId");

                    b.HasOne("App.WMSDeal.Models.OutSalesOrder", "OutSalesOrder")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasKelurahan");

                    b.Navigation("OutSalesOrder");
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrderCustomer", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasKelurahan", "MasKelurahan")
                        .WithMany("OutSalesOrderCustomers")
                        .HasForeignKey("KelId");

                    b.HasOne("App.WMSDeal.Models.OutSalesOrder", "OutSalesOrder")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasKelurahan");

                    b.Navigation("OutSalesOrder");
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutsalesOrderDelivery", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasSalesCourier", "MasSalesCourier")
                        .WithMany("OutsalesOrderDelivery")
                        .HasForeignKey("OrdCourier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.OutSalesOrder", "OutSalesOrder")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasSalesCourier");

                    b.Navigation("OutSalesOrder");
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrderPack", b =>
                {
                    b.HasOne("App.WMSDeal.Models.OutSalesOrderProduct", "OutSalesOrderProduct")
                        .WithMany("OutSalesOrderPacks")
                        .HasForeignKey("OrdProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasPackingType", "MasPackingType")
                        .WithMany("OutSalesOrderPacks")
                        .HasForeignKey("PackTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasPackingType");

                    b.Navigation("OutSalesOrderProduct");
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrderProduct", b =>
                {
                    b.HasOne("App.WMSDeal.Models.OutSalesOrder", "OutSalesOrder")
                        .WithMany("OutSalesOrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasProductData", "MasProductData")
                        .WithMany("OutSalesOrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasProductData");

                    b.Navigation("OutSalesOrder");
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrderStorage", b =>
                {
                    b.HasOne("App.WMSDeal.Models.IncItemProduct", "IncItemProduct")
                        .WithMany()
                        .HasForeignKey("IKU");

                    b.HasOne("App.WMSDeal.Models.InvProductPutaway", "InvProductPutaway")
                        .WithMany()
                        .HasForeignKey("IdPutAway");

                    b.HasOne("App.WMSDeal.Models.OutSalesOrderProduct", "OutSalesOrderProduct")
                        .WithMany("OutSalesOrderStorages")
                        .HasForeignKey("OrdProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.InvStorageCode", "InvStorageCode")
                        .WithMany()
                        .HasForeignKey("StorageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncItemProduct");

                    b.Navigation("InvProductPutaway");

                    b.Navigation("InvStorageCode");

                    b.Navigation("OutSalesOrderProduct");
                });

            modelBuilder.Entity("App.WMSDeal.Models.SecAuditTrail", b =>
                {
                    b.HasOne("App.WMSDeal.Models.SecUser", "SecUser")
                        .WithMany("AuditTrails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SecUser");
                });

            modelBuilder.Entity("App.WMSDeal.Models.SecProfileMenu", b =>
                {
                    b.HasOne("App.WMSDeal.Models.SecMenu", "SecMenu")
                        .WithMany("SecProfileMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.SecProfile", "SecProfile")
                        .WithMany("SecProfileMenus")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SecMenu");

                    b.Navigation("SecProfile");
                });

            modelBuilder.Entity("App.WMSDeal.Models.SecUser", b =>
                {
                    b.HasOne("App.WMSDeal.Models.MasHouseCode", "MasHouseCode")
                        .WithMany()
                        .HasForeignKey("HouseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.MasJabatan", "MasJabatan")
                        .WithMany("SecUsers")
                        .HasForeignKey("JobPosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.WMSDeal.Models.SecProfile", "SecProfile")
                        .WithMany("SecUsers")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasHouseCode");

                    b.Navigation("MasJabatan");

                    b.Navigation("SecProfile");
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncDeliveryOrder", b =>
                {
                    b.Navigation("IncDeliveryOrderProducts");
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncDeliveryOrderProduct", b =>
                {
                    b.Navigation("IncItemProducts");
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncPurchaseOrder", b =>
                {
                    b.Navigation("IncPurchaseOrderProducts");
                });

            modelBuilder.Entity("App.WMSDeal.Models.IncRequestPurchase", b =>
                {
                    b.Navigation("IncRequestPurchaseProducts");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvPickingRoute", b =>
                {
                    b.Navigation("InvPickingRouteColumns");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageBesaran", b =>
                {
                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageBin", b =>
                {
                    b.Navigation("InvStorageCodes");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageCategory", b =>
                {
                    b.Navigation("invStorageCodes");

                    b.Navigation("masProductData");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageCode", b =>
                {
                    b.Navigation("IncItemProducts");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageColumn", b =>
                {
                    b.Navigation("InvStorageLevels");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageLevel", b =>
                {
                    b.Navigation("InvStorageBins");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageRow", b =>
                {
                    b.Navigation("InvStorageColumns");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageSection", b =>
                {
                    b.Navigation("InvStorageLevels");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageSize", b =>
                {
                    b.Navigation("InvStorageCodes");

                    b.Navigation("MasProductDatas");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageTebal", b =>
                {
                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("App.WMSDeal.Models.InvStorageZone", b =>
                {
                    b.Navigation("InvStorageRows");

                    b.Navigation("MasProductDatas");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasCustomerType", b =>
                {
                    b.Navigation("MasCustomerDatas");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDataTenant", b =>
                {
                    b.Navigation("IncPurchaseOrders");

                    b.Navigation("IncRequestPurchases");

                    b.Navigation("MasDataTenantDivisions");

                    b.Navigation("MasDataTenantWarehouses");

                    b.Navigation("MasProductDatas");

                    b.Navigation("MasSupplierDatas");

                    b.Navigation("OutSalesOrders");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDataTenantDivision", b =>
                {
                    b.Navigation("IncPurchaseOrder");

                    b.Navigation("IncRequestPurchase");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDataTenantWarehouse", b =>
                {
                    b.Navigation("IncPurchaseOrder");

                    b.Navigation("IncRequestPurchase");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDeliveryOrderCourier", b =>
                {
                    b.Navigation("IncDeliveryOrders");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDirectorate", b =>
                {
                    b.Navigation("MasDivisions");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasDivision", b =>
                {
                    b.Navigation("MasJabatans");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasHouseCode", b =>
                {
                    b.Navigation("InvStorageRows");

                    b.Navigation("MasDataTenantWarehouses");

                    b.Navigation("OutSalesOrders");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasIndustry", b =>
                {
                    b.Navigation("MasCustomerDatas");

                    b.Navigation("MasSupplierDatas");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasJabatan", b =>
                {
                    b.Navigation("SecUsers");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasKabupaten", b =>
                {
                    b.Navigation("MasKecamatans");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasKecamatan", b =>
                {
                    b.Navigation("MasKelurahans");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasKelurahan", b =>
                {
                    b.Navigation("HouseCodes");

                    b.Navigation("OutSalesOrderCustomers");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasPackingType", b =>
                {
                    b.Navigation("OutSalesOrderPacks");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasProductData", b =>
                {
                    b.Navigation("IncDeliveryOrderProducts");

                    b.Navigation("IncRequestPurchaseProducts");

                    b.Navigation("InvProductStocks");

                    b.Navigation("OutSalesOrderProducts");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasProductPackaging", b =>
                {
                    b.Navigation("MasProductDatas");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasProvinsi", b =>
                {
                    b.Navigation("MasKabupatens");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasRegional", b =>
                {
                    b.Navigation("MasProvinsis");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasSalesCourier", b =>
                {
                    b.Navigation("OutsalesOrderDelivery");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasSupplierData", b =>
                {
                    b.Navigation("IncPurchaseOrders");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasSupplierService", b =>
                {
                    b.Navigation("MasSupplierData");
                });

            modelBuilder.Entity("App.WMSDeal.Models.MasSupplierType", b =>
                {
                    b.Navigation("MasSupplierData");
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrder", b =>
                {
                    b.Navigation("OutSalesDispatchtoCouriers");

                    b.Navigation("OutSalesOrderProducts");
                });

            modelBuilder.Entity("App.WMSDeal.Models.OutSalesOrderProduct", b =>
                {
                    b.Navigation("OutSalesOrderPacks");

                    b.Navigation("OutSalesOrderStorages");
                });

            modelBuilder.Entity("App.WMSDeal.Models.SecMenu", b =>
                {
                    b.Navigation("SecProfileMenus");
                });

            modelBuilder.Entity("App.WMSDeal.Models.SecProfile", b =>
                {
                    b.Navigation("SecProfileMenus");

                    b.Navigation("SecUsers");
                });

            modelBuilder.Entity("App.WMSDeal.Models.SecUser", b =>
                {
                    b.Navigation("AuditTrails");
                });
#pragma warning restore 612, 618
        }
    }
}
